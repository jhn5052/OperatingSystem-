#include<stdio.h>
#define MAX_VAL 9999999
#define MAX 10
int C[MAX][MAX]; //Matrix
int d[MAX]; //


int MatrixChain(int num) {
	int i = 1;
	int k,j;
	int temp;
	for (int i = 1; i <= num; i++) {
		C[i][i] = 0;
	}

	for (int L = 1; L <= num-1; L++) {
		for (i = 1; i <= num - L; i++) {
			j = i + L;
			C[i][j] = MAX_VAL; //infinite
			for (k = i; k <= j - 1; k++) {
				temp = C[i][k] + (d[i - 1] * d[k] * d[j]) + C[k + 1][j];
				if (temp < C[i][j]) {
					C[i][j] = temp;
				}
			}
		}
	}
	return C[1][num];
}

int main() {
	int num;
	printf("Chained Matrix Multiplications \n\n");
	printf("# of Matrix : ");
	scanf("%d", &num);
	printf("Enter d0...d%d : ", num);
	int Final;

	for (int i = 0; i <= num; i++) { 
		scanf("%d", &d[i]);
	}
	printf("\nProblem is ");
	for (int i = 0; i < num-1; i++) {
		printf("[%d : %d]",d[i],d[i+1]);
		printf("x");
	}
	printf("[%d : %d]\n\n", d[num-1], d[num]);

	Final = MatrixChain(num); //C[1:n]

	printf("  C  ");
	for (int i = 1; i <= num; i++) {
		printf("[ %d ] ", i);	
	}
	printf("\n");
	for (int i = 1; i <= num; i++) {
		printf("[ %d ] ", i);
		for (int j = 1; j <= num; j++) {
			if (C[i][j] >= 10000) {
				printf("%3d ", C[i][j]);
			}
			else if (C[i][j] >= 1000) { 
				printf("%3d  ", C[i][j]);
			}
			else if (C[i][j] > 0) { 
				printf("%3d   ", C[i][j]);
			}
			
		}
		printf("\n");
	}
	printf("\nFinal solution is %d", Final);
	
}
