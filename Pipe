#include<stdio.h>
#include<unistd.h>
#include<stdlib.h>
#include<ctype.h> // toupper
#include<sys/types.h>
#include<sys/wait.h>
#include<string.h>
#include<fcntl.h>
#include<sys/stat.h>
//#define SIZE 256
#define MAX 10

int main() {
    int pipe1[2], pipe2[2];//pipe1->read , pipe2->write 
    char buf[MAX];
    int pid1, pid2;       
    int n, i = 0;
    int input, status;
    pipe(pipe1);
    pipe(pipe2);

    pid1 = fork();
    if(pid1 == 0) {//p2
        int k=0;
        close(pipe1[1]);//pipe1 write close
        close(pipe2[0]);//pipe2 read close
        while((n = read(pipe1[0], buf, MAX)) != 0){ //convert them into capital characters
            for(k=0;k<n;k++){//n size plus
                buf[k] = (char)toupper(buf[k]);
            }
            write(pipe2[1], buf, n);//put them into pipe2
        }

        close(pipe1[0]);
        close(pipe2[1]);
        exit(0);   
    }

    pid2 = fork();
    if(pid2 == 0){//p3
        int k = 0;
        close(pipe1[0]);//only use pipe2, close all pipe1 
        close(pipe1[1]);
        close(pipe2[1]);

        while((n = read(pipe2[0], buf, MAX)) != 0){
            for(k = 0; k < n ; k++){
                printf("%c", buf[k]);
            }
            printf("\n");
        }

        close(pipe2[0]);
        exit(0);
    }

    //parent
    close(pipe2[0]);
    close(pipe2[1]);
    input = open("input", 0);//read mode open
    close(pipe1[0]);

    while((n = read(input, buf, MAX)) != 0){
        write(pipe1[1], buf, n);//put them into pipe1
    }
    
    close(input);//close file
    close(pipe1[1]);  
    //wait for P2,P3 Exits
    waitpid(-1, &status, 0);//wait p2, p3
}
